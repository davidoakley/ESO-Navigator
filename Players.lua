---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by david.
--- DateTime: 31/01/2025 12:30
---
local Nav = Navigator
local Players = Nav.Players or {
    players = nil
}
local Utils = Nav.Utils

local function addPlayerZone(self, zones, zoneId, zoneName, userID, icon, poiType, charName)
    local zoneInfo = {
        zoneId = zoneId,
        zoneName = Utils.FormatSimpleName(zoneName),
        userID = userID,
        icon = icon,
        poiType = poiType,
        canJumpToPlayer = zones[zoneId] and zones[zoneId].canJumpToPlayer
    }

    self.players[userID] = zoneInfo
    if charName then
        charName = zo_strformat("<<!AC:1>>", charName)
        zoneInfo.charName = charName
    end
    return zoneInfo
end

function Players:SetupPlayers()
    local zones = Nav.Locations:GetZones()

    local myID = GetDisplayName()
    self.players = {}

    local guildCount = GetNumGuilds()
    for guild = 1, guildCount do
        local guildID = GetGuildId(guild)
        local guildMembers = GetNumGuildMembers(guildID)

        for i = 1, guildMembers do
            local userID, _, _, playerStatus = GetGuildMemberInfo(guildID, i)

            if playerStatus ~= PLAYER_STATUS_OFFLINE and userID ~= myID then
                local hasChar, charName, zoneName, _, _, _, _, zoneId = GetGuildMemberCharacterInfo(guildID, i)
                if hasChar then
                    addPlayerZone(self, zones, zoneId, zoneName, userID, "/esoui/art/menubar/gamepad/gp_playermenu_icon_character.dds", Nav.POI_GUILDMATE, charName)
                end
            end
        end
    end

    local friendCount = GetNumFriends()
    for i = 1, friendCount do
        local userID, _, playerStatus, secsSinceLogoff = GetFriendInfo(i)

        if playerStatus ~= PLAYER_STATUS_OFFLINE and secsSinceLogoff == 0 then
            local hasChar, charName, zoneName, _, _, _, _, zoneId = GetFriendCharacterInfo(i)
            if hasChar then
                local player = addPlayerZone(self, zones, zoneId, zoneName, userID, "/esoui/art/menubar/gamepad/gp_playermenu_icon_character.dds", Nav.POI_FRIEND, charName)
                if player then
                    player.weight = 1.1
                end
            end
        end
    end

    local groupCount = GetGroupSize()
    local playerName = string.lower(GetUnitName("player"))
    for i = 1, groupCount do
        local unitTag = GetGroupUnitTagByIndex(i)
        if unitTag then
            local charName = GetUnitName(unitTag)
            local userID = GetUnitDisplayName(unitTag)
            if IsUnitOnline(unitTag) and string.lower(charName) ~= playerName then
                local zoneId = GetZoneId(GetUnitZoneIndex(unitTag))
                local zoneName = GetZoneNameById(zoneId)
                local isLeader = IsUnitGroupLeader(unitTag)
                local icon = isLeader and "/esoui/art/icons/mapkey/mapkey_groupleader.dds" or "/esoui/art/icons/mapkey/mapkey_groupmember.dds"
                local player = addPlayerZone(self, zones, zoneId, zoneName, userID or '"'..charName..'"', icon, Nav.POI_GROUPMATE, charName)
                if player then
                    player.unitTag = unitTag
                    player.weight = isLeader and 1.3 or 1.2
                end
            end
        end
    end
end

function Players:ClearPlayers()
    self.players = nil
end

local function createPlayerNode(player, setSuffix)
    return {
        name = player.userID,
        userID = player.userID,
        unitName = player.unitName,
        isLeader = player.isLeader,
        unitTag = player.unitTag,
        barename = player.userID:sub(2), -- remove '@' prefix
        zoneId = player.zoneId,
        zoneName = player.zoneName,
        icon = player.icon,
        suffix = setSuffix and player.zoneName,
        poiType = player.poiType,
        known = true,
        weight = player.weight,
        canJumpToPlayer = player.canJumpToPlayer
    }
end

function Players:GetPlayerList()
    if self.players == nil then self:SetupPlayers() end

    local nodes = {}
    for _, player in pairs(self.players) do
        table.insert(nodes, createPlayerNode(player, true))
    end

    return nodes
end

function Players:GetPlayerInZone(zoneId)
    if self.players == nil then self:SetupPlayers() end

    for _, player in pairs(self.players) do
        if player.zoneId == zoneId then
            return createPlayerNode(player)
        end
    end
    return nil
end

local function groupComparison(x, y)
    if x.isLeader and not y.isLeader then -- There can be only one
        return true
    end
    return (x.barename or x.name) < (y.barename or y.name)
end

function Players:GetGroupList()
    if self.players == nil then self:SetupPlayers() end
    
    local list = {}
    for player in pairs(self.players) do
        if player.poiType == Nav.POI_GROUPMATE then
            table.insert(list, createPlayerNode(player, true))
        end
    end

    table.sort(list, groupComparison)

    return list
end

function Players:IsGroupLeader()
    return string.lower(GetUnitName("player")) == string.lower(GetGroupLeaderUnitTag())
end

Nav.Players = Players