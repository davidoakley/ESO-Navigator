---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by david.
--- DateTime: 31/01/2025 12:30
---
local Nav = Navigator
local Players = Nav.Players or {
    players = nil,
    playerZones = nil
}
local Utils = Nav.Utils

local function addPlayerZone(self, zones, zoneId, zoneName, userID, icon, poiType)
    if zones[zoneId] and CanJumpToPlayerInZone(zoneId) then
        local zoneInfo = {
            zoneId = zoneId,
            zoneName = Utils.FormatSimpleName(zoneName),
            userID = userID,
            icon = icon,
            poiType = poiType
        }

        self.players[userID] = zoneInfo
        self.playerZones[zoneId] = zoneInfo
    end
end

function Players:SetupPlayerZones()
    local zones = Nav.Locations:GetZones()

    local myID = GetDisplayName()
    self.playerZones = {}
    self.players = {}

    local guildCount = GetNumGuilds()
    for guild = 1, guildCount do
        local guildID = GetGuildId(guild)
        local guildMembers = GetNumGuildMembers(guildID)

        for i = 1, guildMembers do
            local userID, _, _, playerStatus = GetGuildMemberInfo(guildID, i)

            if playerStatus ~= PLAYER_STATUS_OFFLINE and userID ~= myID then
                local _, _, zoneName, _, _, _, _, zoneId = GetGuildMemberCharacterInfo(guildID, i)
                addPlayerZone(self, zones, zoneId, zoneName, userID, "/esoui/art/menubar/gamepad/gp_playermenu_icon_character.dds", Nav.POI_GUILDMATE)
            end
        end
    end

    local friendCount = GetNumFriends()
    for i = 1, friendCount do
        local userID, _, playerStatus, secsSinceLogoff = GetFriendInfo(i)

        if playerStatus ~= PLAYER_STATUS_OFFLINE and secsSinceLogoff == 0 then
            local hasChar, _, zoneName, _, _, _, _, zoneId = GetFriendCharacterInfo(i)
            if hasChar then
                addPlayerZone(self, zones, zoneId, zoneName, userID, "/esoui/art/menubar/gamepad/gp_playermenu_icon_character.dds", Nav.POI_FRIEND)
            end
        end
    end
end

function Players:ClearPlayers()
    self.playerZones = nil
    self.players = nil
end

function Players:GetPlayerList()
    if self.players == nil then
        self:SetupPlayerZones()
    end

    local nodes = {}
    for userID, info in pairs(self.players) do
        table.insert(nodes, {
            name = userID,
            barename = userID:sub(2), -- remove '@' prefix
            zoneId = info.zoneId,
            zoneName = info.zoneName,
            icon = info.icon,
            suffix = info.zoneName,
            poiType = info.poiType,
            userID = userID,
            known = true
        })
    end

    return nodes
end

function Players:GetPlayerInZone(zoneId)
    if self.playerZones == nil then
        self:SetupPlayerZones()
    end

    local info = self.playerZones[zoneId]
    if info then
        return {
            name = info.zoneName,
            barename = Utils.bareName(info.zoneName),
            zoneId = zoneId,
            zoneName = info.zoneName,
            icon = info.icon,
            poiType = info.poiType,
            userID = info.userID,
            known = true
        }
    else
        return nil
    end
end

Nav.Players = Players